[workspace]
members = ["sqlx-utils-macro"]

[workspace.package]
version = "1.1.2"
description = "Utilities for working with SQLx in a structured and efficient way, both when developing and running"
repository = "https://github.com/retrokiller543/sqlx_utils"
authors = ["Emil Sch√ºtt <emil.schutt@gmail.com>"]
readme = "README.md"
license = "MIT"
edition = "2024"

[package]
name = "sqlx-utils"
version = "1.1.3"
edition.workspace = true
description.workspace = true
repository.workspace = true
authors.workspace = true
readme.workspace = true
license.workspace = true

[package.metadata.docs.rs]
all-features = true

[[example]]
name = "basic_repo"
doc-scrape-examples = true

[lints.rust]
unexpected_cfgs = { level = "allow", check-cfg = ['cfg(CHANNEL_NIGHTLY)'] }

[dependencies]
paste = "1.0.15"
sqlx = "0.8.3"
sqlx-utils-macro = { path = "./sqlx-utils-macro", version = "1.1.2", default-features = false }
thiserror = "2.0.12"
futures = "0.3.31"
tracing = "0.1.41"
cfg-if = "1.0.0"
async-trait = "0.1.87"
parking_lot = { version = "0.12.3", features = ["send_guard", "arc_lock"] }

[dev-dependencies]
trybuild = "1.0"
tokio ={ version = "1.43.0", features = ["rt", "macros", "rt-multi-thread"] }

[build-dependencies]
rustc_version = "0.4.0"

[features]
#default = ["any", "filter_debug_impl", "nightly"]
default = ["any", "filter_debug_impl"]

# Database related features
sqlite = ["sqlx-utils-macro/sqlite", "sqlx/sqlite"]
any = ["sqlx-utils-macro/any", "sqlx/any"]
postgres = ["sqlx-utils-macro/postgres", "sqlx/postgres"]
mysql = ["sqlx-utils-macro/mysql", "sqlx/mysql"]

# Experimental, might work or might not work
nightly = ["sqlx-utils-macro/nightly"]
try-parse = ["sqlx-utils-macro/try-parse"]

# Filter realted features
filter_debug_impl = ["sqlx-utils-macro/filter_debug_impl"]
filter-blanket-impl = ["sqlx-utils-macro/filter-blanket-impl"]

# logging and extra features
log_err = []
insert_duplicate = []
